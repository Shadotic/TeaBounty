class TeaBounty {
    constructor() {
        this.bounties = {}; // Dictionary to store active bounties
    }

    createBounty(projectName, issueId, reward) {
        /**
         * Create a new bounty for a specific issue in a project.
         */
        if (projectName in this.bounties) {
            this.bounties[projectName][issueId] = reward;
        } else {
            this.bounties[projectName] = { [issueId]: reward };
        }
    }

    resolveBounty(projectName, issueId, contributor) {
        /**
         * Resolve a bounty by awarding it to a contributor.
         */
        if (projectName in this.bounties && issueId in this.bounties[projectName]) {
            const reward = this.bounties[projectName][issueId];
            delete this.bounties[projectName][issueId];
            console.log(`Bounty for issue ${issueId} in project '${projectName}' resolved. `
                  + `${reward} TEA tokens awarded to contributor ${contributor}.`);
        } else {
            console.log(`No active bounty found for issue ${issueId} in project '${projectName}'.`);
        }
    }
}

// Example usage
if (require.main === module) {
    const teaBounty = new TeaBounty();
    teaBounty.createBounty("MyOpenSourceProject", 123, 50);
    teaBounty.createBounty("AnotherProject", 456, 100);
    teaBounty.resolveBounty("MyOpenSourceProject", 123, "Contributor1");
    teaBounty.resolveBounty("NonExistingProject", 789, "Contributor2");
}
